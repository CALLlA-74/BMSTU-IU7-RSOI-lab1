name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Set up python-3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install packages
        run: pip3.10 install -r requirements.txt
        
      - name: Run unit tests
        run: pytest -vs app/unit_tests/tests.py
        
  deploy:
    name: Deploy Persons service on remote VM
    needs: [unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Send project files on VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "app,Dockerfile,docker-compose.yml,requirements.txt"
          target: /deploy/${{ secrets.SSH_USER }}/person_service
        
      - name: Build and up person-service
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /deploy/${{ secrets.SSH_USER }}/person_service
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose down
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker rmi person_service
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose build
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d
        
          
    
    #name: Run API Tests
    #runs-on: ubuntu-latest
    #steps:
    #  - uses: actions/checkout@v4
    #    with:
    #      fetch-depth: 0
    #
    #  - name: Run API Tests
    #    uses: matt-ball/newman-action@master
    #    with:
    #      collection: postman/[inst] Lab1.postman_collection.json
    #      environment: postman/[inst][heroku] Lab1.postman_environment.json
    #      delayRequest: 100
    #      reporters: '[ "cli" ]'